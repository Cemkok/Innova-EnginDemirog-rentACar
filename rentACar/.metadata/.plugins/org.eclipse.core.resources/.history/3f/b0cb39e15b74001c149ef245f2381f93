package com.btkAkademi.rentACar.business.concretes;


import java.util.List;
import java.util.stream.Collectors;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.btkAkademi.rentACar.business.abstracts.CarMaintenanceService;
import com.btkAkademi.rentACar.business.constants.Messages;

import com.btkAkademi.rentACar.business.dtos.CarMaintenanceDto;
import com.btkAkademi.rentACar.business.requests.carMaintenanceRequest.CreateCarMaintenanceRequest;
import com.btkAkademi.rentACar.core.utilities.mapping.ModelMapperService;
import com.btkAkademi.rentACar.core.utilities.results.DataResult;

import com.btkAkademi.rentACar.core.utilities.results.Result;
import com.btkAkademi.rentACar.core.utilities.results.SuccessDataResult;
import com.btkAkademi.rentACar.core.utilities.results.SuccessResult;
import com.btkAkademi.rentACar.dataAccess.abstracts.CarMaintenanceDao;

import com.btkAkademi.rentACar.entities.concretes.CarMaintenance;
@Service
public class CarMaintenanceManager implements CarMaintenanceService{
	private CarMaintenanceDao carMaintenanceDao;
	private ModelMapperService modelMapperService;
	
	
	@Autowired
	public CarMaintenanceManager(CarMaintenanceDao carMaintenanceDao, ModelMapperService modelMapperService) {
		super();
		this.carMaintenanceDao = carMaintenanceDao;
		this.modelMapperService = modelMapperService;
	}


	@Override
	public DataResult<List<CarMaintenanceDto>> getAll() {
		List<CarMaintenance> carMaintananceList = this.carMaintenanceDao.findAll();
		List<CarMaintenanceDto> response = carMaintananceList.stream()
				.map(carMaintanance->modelMapperService.forDto()
				.map(carMaintanance, CarMaintenanceDto.class))
				.collect(Collectors.toList());
		
		return new SuccessDataResult<List<CarMaintenanceDto>>(response);
	}


	@Override
	public Result add(CreateCarMaintenanceRequest createCarMaintenanceRequest) {
		CarMaintenance carMaintanance = this.modelMapperService.forRequest().map(createCarMaintenanceRequest,CarMaintenance.class);
		this.carMaintenanceDao.save(carMaintanance);		
		return new SuccessResult(Messages.carMaintenanceAdded);
	}



	@Override
	public boolean checkIfCarIsInMaintenance(int carId) {
		if(carMaintenanceDao.findByCarIdAndReturnDateIsNull(carId)!=null) {
			return true;
		}
		else return false;
}
	

	


	
}
